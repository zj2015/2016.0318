//
//  VideoExplanationViewController.m
//  MRobot
//
//  Created by BaiYu on 15/8/22.
//  Copyright (c) 2015年 silysolong. All rights reserved.
//

#import "VideoExplanationViewController.h"
#import "ExerciseTrainViewController.h"
#import "MainViewController.h"
#import "DWCustomPlayerViewController.h"
#import "SkillTrainingViewController.h"
#import "KnowledgeVideoModel.h"
#import "ResultArrayListModel.h"
#import "KnowledgeCVideoModel.h"
#import "WeekVideoModel.h"
#import "KVideoListModel.h"
#import "VideoListModel.h"
#import "CVideoListModel.h"
#import "SVideoListModel.h"
#import "CommonSkillModel.h"
#import "CommonListModel.h"

@interface VideoExplanationViewController ()

@end

@implementation VideoExplanationViewController

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.tabBarController.tabBar.hidden = YES;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    if (self.fromVC == 0) {
        [self base_changeNavigationTitleWithString:@"讲解视频"];
    }else if (self.fromVC == 1) {
        [self base_changeNavigationTitleWithString:@"通用解题技巧讲解"];
    }
    
    self.view.backgroundColor = [UIColor colorWithRed:0.9 green:0.9 blue:0.9 alpha:1];
    openedInSectionArr = [NSMutableArray array];
    dataCount = 0;
}

-(void)_prepareUI
{
    if (self.fromVC == 0) {//代表讲解视频
        knowledgeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        knowledgeBtn.frame = CGRectMake(0, 64, MainScreenSize_W/2, 35*SIZE_TIMES);
        knowledgeBtn.tag = 1;
        [knowledgeBtn setTitle:@"知识点" forState:UIControlStateNormal];
        knowledgeBtn.titleLabel.font = [UIFont systemFontOfSize:15];
        knowledgeBtn.backgroundColor = [UIColor colorWithRed:54/255.0 green:184/255.0 blue:176/255.0 alpha:1];
        [knowledgeBtn addTarget:self action:@selector(selectBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:knowledgeBtn];
        
        solveBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        solveBtn.frame = CGRectMake(MainScreenSize_W/2, 64, MainScreenSize_W/2, 35*SIZE_TIMES);
        solveBtn.tag = 2;
        [solveBtn setTitle:@"解题技巧" forState:UIControlStateNormal];
        solveBtn.titleLabel.font = [UIFont systemFontOfSize:15];
        [solveBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        solveBtn.backgroundColor = [UIColor whiteColor];
        [solveBtn addTarget:self action:@selector(selectBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:solveBtn];
        
        videoTable = [[UITableView alloc] initWithFrame:CGRectMake(0, 68 + 35*SIZE_TIMES, MainScreenSize_W, MainScreenSize_H - 68 - 35*SIZE_TIMES) style:UITableViewStylePlain];
        videoTable.tag = 1;
        
    }else if (self.fromVC == 1){// 代表通用解题技巧
        videoTable = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, MainScreenSize_W, MainScreenSize_H) style:UITableViewStylePlain];
        videoTable.tag = 2;
    }
    
    videoTable.separatorStyle = UITableViewCellSeparatorStyleNone;
    videoTable.delegate = self;
    videoTable.dataSource = self;
    [self.view addSubview:videoTable];
}

-(void)_prepareData
{
    if (self.fromVC == 0) {//讲解视频
        //1.4.8 讲解视频
        [self showAlertHUD:@"正在加载..."];
        LearningPlanRequest *videoListRequest = [[LearningPlanRequest alloc] init];
        [videoListRequest userWeekVideoListWithWeekId:self.weekId success:^(id obj) {
            InfoResult *infoResult = (InfoResult *)obj;
            if ([infoResult.code isEqualToString:@"0"]) {
                WeekVideoModel *weekVideoModel = [[WeekVideoModel alloc] init];
                weekVideoModel = (WeekVideoModel *)[infoResult extraObj];

                kVideosArr = weekVideoModel.kVideoListArr;
                sVideosArr = weekVideoModel.sVideoListArr;
                
                if (videoTable.tag == 1) {
                    dataCount = [kVideosArr count];
                }else{
                    dataCount = [sVideosArr count];
                }
                if ([openedInSectionArr count] != 0) {
                    [openedInSectionArr removeAllObjects];
                }
                for (int i=0; i< dataCount; i++) {
                    [openedInSectionArr addObject:@"0"];
                }
    
                [videoTable reloadData];
            }else{
                [aCommon iToast:@"加载失败!"];
            }
            
        } failed:^(id obj) {
            [aCommon iToast:@"系统未知错误!"];
        }];
    }else if (self.fromVC == 1){//通用解题技巧
        //1.4.9 通用解题技巧
        [self showAlertHUD:@"正在加载..."];
        LearningPlanRequest *skillListRequest = [[LearningPlanRequest alloc] init];
        [skillListRequest userCommonSkillListWithWeekId:self.weekId success:^(id obj) {
            InfoResult *infoResult = (InfoResult *)obj;
            if ([infoResult.code isEqualToString:@"0"]) {
                CommonSkillModel *commonSkillModel = [[CommonSkillModel alloc] init];
                commonSkillModel = (CommonSkillModel *)[infoResult extraObj];
    
                sVideosArr = commonSkillModel.commonSkillListArr;
                
                dataCount = [sVideosArr count];
                if ([openedInSectionArr count] != 0) {
                    [openedInSectionArr removeAllObjects];
                }
                for (int i=0; i< dataCount; i++) {
                    [openedInSectionArr addObject:@"0"];
                }
                
                [videoTable reloadData];
                
            }else{
                [aCommon iToast:@"加载失败!"];
            }
            
        } failed:^(id obj) {
            [aCommon iToast:@"系统未知错误!"];
        }];
    }
}

-(void)selectBtnClick:(UIButton *)sender
{
    if (sender.tag == 1) {
        //知识点
        knowledgeBtn.backgroundColor = [UIColor colorWithRed:54/255.0 green:184/255.0 blue:176/255.0 alpha:1];
        [knowledgeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        solveBtn.backgroundColor = [UIColor whiteColor];
        [solveBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        
        videoTable.tag = 1;
        preHeaderIndex = 0;
        if ([openedInSectionArr count] != 0) {
            [openedInSectionArr removeAllObjects];
        }
        for (int i=0; i< [kVideosArr count]; i++) {
            [openedInSectionArr addObject:@"0"];
        }
        
        [videoTable reloadData];
        
    }else{
        //讲解视频
        knowledgeBtn.backgroundColor = [UIColor whiteColor];
        [knowledgeBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        solveBtn.backgroundColor = [UIColor colorWithRed:54/255.0 green:184/255.0 blue:176/255.0 alpha:1];
        [solveBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        
        videoTable.tag = 2;
        preHeaderIndex = 0;
        if ([openedInSectionArr count] != 0) {
            [openedInSectionArr removeAllObjects];
        }
        for (int i=0; i< [sVideosArr count]; i++) {
            [openedInSectionArr addObject:@"0"];
        }
        
        [videoTable reloadData];
    }
}

#pragma mark- UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if (tableView.tag == 1) {
        return [kVideosArr count];
    }else{
        return [sVideosArr count];
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if ([[openedInSectionArr objectAtIndex:section] intValue] == 1) {
        if (tableView.tag == 1) {
            KVideoListModel *kVideoListModel = [[KVideoListModel alloc] init];
            kVideoListModel = [kVideosArr objectAtIndex:section];
            
            return [kVideoListModel.videoList count];
        }else{
            return 1;
        }
    }else{
        return 0;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *headerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, MainScreenSize_W, 40*SIZE_TIMES)];
    headerView.backgroundColor = [UIColor whiteColor];
    
    UIButton * heightButton = [UIButton buttonWithType:UIButtonTypeSystem];
    heightButton.frame = CGRectMake(0, 0, MainScreenSize_W, 40*SIZE_TIMES);
    heightButton.tag = section;
    [heightButton addTarget:self action:@selector(headerClick:) forControlEvents:UIControlEventTouchUpInside];
    [headerView addSubview:heightButton];
    
    UILabel *nameLab = [[UILabel alloc] initWithFrame:CGRectMake(10, 5, MainScreenSize_W - 40, 40*SIZE_TIMES - 10)];
    if (tableView.tag == 1) {//知识点视频
        KVideoListModel *kVideoListModel = [[KVideoListModel alloc] init];
        kVideoListModel = [kVideosArr objectAtIndex:section];
        
        nameLab.text = [NSString stringWithFormat:@"%ld. %@",(long)section + 1,kVideoListModel.kName];
    }else{//解题技巧
        if (self.fromVC == 0) {
            //讲解视频中的解题技巧
            SVideoListModel *sVideoListModel = [[SVideoListModel alloc] init];
            sVideoListModel = [sVideosArr objectAtIndex:section];
            nameLab.text = [NSString stringWithFormat:@"%ld. %@",(long)section + 1,sVideoListModel.sName];
            
        }else{
            //通用解题技巧
            CommonListModel *commonListModel = [[CommonListModel alloc] init];
            commonListModel = [sVideosArr objectAtIndex:section];
            nameLab.text = [NSString stringWithFormat:@"%ld. %@",(long)section + 1,commonListModel.sName];
        }
        
    }
    [headerView addSubview:nameLab];
    
    UIImageView * imageView = [[UIImageView alloc] initWithFrame:CGRectMake(MainScreenSize_W - 30, 15, 15*SIZE_TIMES, 15*SIZE_TIMES)];
    imageView.image = [UIImage imageNamed:@"hide"];
    [headerView addSubview:imageView];
    
    if ([[openedInSectionArr objectAtIndex:section] intValue] == 1   && section == preHeaderIndex) {
        imageView.image = [UIImage imageNamed:@"show"];
    }else{
        imageView.image = [UIImage imageNamed:@"hide"];
    }
    
    UILabel * line = [[UILabel alloc] initWithFrame:CGRectMake(0, 39*SIZE_TIMES, MainScreenSize_W, 0.5)];
    line.backgroundColor = [UIColor colorWithRed:0.9 green:0.9 blue:0.9 alpha:1];
    [headerView addSubview:line];
    
    return headerView;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"VideoConnectTableViewCell";
    
    if ([tableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [tableView setSeparatorInset:UIEdgeInsetsZero];
    }
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:identifier];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    
    if (tableView.tag == 1) {
        for (UIView *view in [cell subviews]) {
            if ([view isKindOfClass:[SVideoView class]]) {
                [view removeFromSuperview];
            }
        }
        
        KVideoListModel *kVideoListModel = [[KVideoListModel alloc] init];
        kVideoListModel = [kVideosArr objectAtIndex:indexPath.section];
        
        VideoListModel *videoListModel = [kVideoListModel.videoList objectAtIndex:indexPath.row];
        
        KVideoView *kVideoView = [[KVideoView alloc] initWithFrame:CGRectMake(0, 0, MainScreenSize_W, SIZE_TIMES*100) listIndex:indexPath.row smallVideoCount:[videoListModel.cVideoList count]];
        kVideoView.delegate = self;
        [cell addSubview:kVideoView];
        
    }else{
        for (UIView *view in [cell subviews]) {
            if ([view isKindOfClass:[KVideoView class]]) {
                [view removeFromSuperview];
            }
        }
        
        SVideoView *sVideoView = [[SVideoView alloc] initWithFrame:CGRectMake(0, 0, MainScreenSize_W, SIZE_TIMES*115) listIndex:indexPath.row];
        sVideoView.delegate = self;
        [cell addSubview:sVideoView];
    }
    
    return cell;
}

#pragma mark- UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 40 * SIZE_TIMES;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView.tag == 1) {
        return 100 * SIZE_TIMES;
    }else{
        return 115 * SIZE_TIMES;
    }
}

#pragma mark - 区头点击方法
- (void)headerClick:(UIButton *)btn
{
    if ([[openedInSectionArr objectAtIndex:btn.tag] intValue] == 0) {
        [openedInSectionArr replaceObjectAtIndex:preHeaderIndex withObject:@"0"];//将上一个被点击的区置为闭合状态
        [openedInSectionArr replaceObjectAtIndex:btn.tag withObject:@"1"];
    }
    else
    {
        [openedInSectionArr replaceObjectAtIndex:btn.tag withObject:@"0"];
    }
    preHeaderIndex = btn.tag;
    [videoTable reloadData];
}

#pragma mark - PassBtnTagDelegate 知识点视频按钮点击事件
-(void)passKVideoTag:(NSInteger)btnTag
{
    PLog(@"%ld知识点视频按钮被点击",(long)btnTag);
    PLog(@"当前展开的区%ld",(long)preHeaderIndex);
    
    KVideoListModel *kVideoListModel = [[KVideoListModel alloc] init];
    kVideoListModel = [kVideosArr objectAtIndex:preHeaderIndex];
    
    VideoListModel *videoListModel = [kVideoListModel.videoList objectAtIndex:btnTag];
    
    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
    player.videoId = videoListModel.kVideoCCId;
    player.videoTitle = videoListModel.kVideoCCId;
    player.imgUrlstring = videoListModel.kVideoCoverUrl;
    player.videoURL = videoListModel.kVideoUrl;
    player.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:player animated:NO];
}

#pragma mark - PassBtnTagDelegate 经典例题视频按钮点击事件
-(void)passSmallVideoTag:(NSInteger)btnTag
{
    PLog(@"%ld经典例题视频按钮被点击",(long)btnTag);
    PLog(@"当前展开的区%ld",(long)preHeaderIndex);
    
    KVideoListModel *kVideoListModel = [[KVideoListModel alloc] init];
    kVideoListModel = [kVideosArr objectAtIndex:preHeaderIndex];
    
    VideoListModel *videoListModel = [kVideoListModel.videoList objectAtIndex:btnTag/10000];
    
    CVideoListModel *cVideoModel = [videoListModel.cVideoList objectAtIndex:btnTag%10000];
    
    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
    player.videoId = cVideoModel.cVideoCCId;
    player.videoTitle = cVideoModel.cVideoCCId;
    player.imgUrlstring = cVideoModel.cVideoCoverUrl;
    player.videoURL = cVideoModel.cVideoUrl;
    player.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:player animated:NO];
}

#pragma mark - PassSkillBtnTagDelegate 技巧视频按钮点击事件
-(void)passSVideoTag:(NSInteger)btnTag
{
    PLog(@"%ld技巧视频按钮被点击",(long)btnTag);
    PLog(@"当前展开的区%ld",(long)preHeaderIndex);
    
//    [self showAlert:preHeaderIndex];
    
    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
    if (self.fromVC == 0) {
        //视频讲解
        SVideoListModel *sVideoListModel = [sVideosArr objectAtIndex:btnTag];
        player.videoId = sVideoListModel.sVideoCCId;
        player.videoTitle = sVideoListModel.sVideoCCId;
        player.imgUrlstring = sVideoListModel.sVideoCoverUrl;
        player.videoURL = sVideoListModel.sVideoUrl;
    }else{
        //通用解题技巧
        CommonListModel *commonListModel = [sVideosArr objectAtIndex:btnTag];
        player.videoId = commonListModel.sVideoCCId;
        player.videoTitle = commonListModel.sVideoCCId;
        player.imgUrlstring = commonListModel.sVideoCoverUrl;
        player.videoURL = commonListModel.sVideoUrl;
    }
    player.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:player animated:NO];

}

#pragma mark - PassSkillBtnTagDelegate 技巧训练按钮点击事件
-(void)passSkillTrainTag:(NSInteger)btnTag
{
    PLog(@"%ld技巧训练按钮被点击",(long)btnTag);
    PLog(@"当前展开的区%ld",(long)preHeaderIndex);
    SkillTrainingViewController *skillTrainVC = [[SkillTrainingViewController alloc] init];
    skillTrainVC.fromVC = 1;
    if (self.fromVC == 0) {
        //视频讲解
        SVideoListModel *sVideoListModel = [sVideosArr objectAtIndex:btnTag];
        skillTrainVC.sId = sVideoListModel.sId;
    }else{
        //通用解题技巧
        CommonListModel *commonListModel = [sVideosArr objectAtIndex:btnTag];
        skillTrainVC.sId = commonListModel.sId;
    }
    [self.navigationController pushViewController:skillTrainVC animated:YES];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
