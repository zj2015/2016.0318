//
//  ExerciseTrainViewController.m
//  MRobot
//
//  Created by mac on 15/8/22.
//  Copyright (c) 2015年 silysolong. All rights reserved.
//

#import "ExerciseTrainViewController.h"
#import "TrainResultViewController.h"
#import "QuestionDataModel.h"
#import "ReadingComModel.h"
#import "QuestionListModel.h"
#import "SubmitQuestionModel.h"
#import "PicBrowseViewController.h"
//#import "DWCustomPlayerViewController.h"
#import "RequestCenter.h"
#import "SBJSON.h"
#import "TrainResultViewController.h"
#import "TrainResultTwoViewController.h"
#import "TrainResultThreeViewController.h"
#import "TrainResultFourViewController.h"


@interface ExerciseTrainViewController ()
{
    BOOL _isMiddleClick;
}
@property (strong, nonatomic) QuestionDataModel *questionModel;
@property (strong,nonatomic)NSTimer *timer;
@end

@implementation ExerciseTrainViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self base_changeNavigationTitleWithString:@"1/12" andImage:@"nav_title"];
    [self base_createRightNavigationBarButtonWithFrontImage:@"more2" andSelectedImageName:@"more2" andBackGroundImageName:@"more2" andTitle:@"交卷" andSize:CGSizeMake(40, 30)];
}

- (void)_prepareData
{
    _questionAccount = 10;
    LearningPlanRequest *request = [[LearningPlanRequest  alloc]init];
    [request userQuestinListWithWeekId:_weekId success:^(id obj) {
        InfoResult *infoResult = (InfoResult *)obj;
        if ([infoResult.code isEqualToString:@"0"]) {
            _questionModel = [[QuestionDataModel alloc] init];
            _questionModel = (QuestionDataModel *)[infoResult extraObj];
            [self base_changeNavigationTitleWithString:[NSString stringWithFormat:@"%d/%@",1,_questionModel.qAmount] andImage:@"nav_title"];
            _questionAccount = [_questionModel.qAmount intValue];
//            _timeNumber = [questionModel.totalTime longLongValue]/1000.0;
            _timeNumber = 0;
            
            _danArr = [NSArray arrayWithArray:_questionModel.dxt];
            _tianArr = [NSArray arrayWithArray:_questionModel.tkt];
            _yueArr = [NSArray arrayWithArray:_questionModel.ydljt];
            _tingArr = [NSArray arrayWithArray:_questionModel.tlt];
            
            //答案对照
            _answerArr = [NSMutableArray array];
            for (int i = 0; i < _questionAccount; i ++) {
                [_answerArr addObject:@"0"];
            }
            
            //提交答案
            _array = [NSMutableArray array];
            _answerDict = [NSMutableDictionary dictionary];
            
            for (int i = 0; i < [_danArr count]; i ++ ) {
                QuestionListModel *listModel = _danArr[i];
                NSMutableDictionary *dict = [NSMutableDictionary dictionary];
                _choose = [[NSMutableArray alloc]initWithObjects:@"", nil];
                [dict setValue:listModel.qId forKey:@"qId"];
                [dict setValue:_choose forKey:@"options"];
                [_array addObject:dict];
            }
            
            for (int i = 0; i < [_tianArr count]; i ++ ) {
                QuestionListModel *listModel = _tianArr[i];
                NSMutableDictionary *dict = [NSMutableDictionary dictionary];
                _tianArray1 = [NSMutableArray array];
                for (int i = 0; i < listModel.options.count; i ++) {
                    [_tianArray1 addObject:@""];
                }
                [dict setValue:listModel.qId forKey:@"qId"];
                [dict setValue:_tianArray1 forKey:@"options"];
                [_array addObject:dict];
            }
            
            
            
            //阅读理解
            for (int i = 0; i < _yueArr.count; i ++ ) {
                ReadingComModel *listmodel = _yueArr[i];
                NSDictionary *dict = listmodel.childQuestions;
                if ([dict objectForKey:@"DXT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"DXT"];
                    for (QuestionListModel *arr in dataModel.dxt) {
                        NSDictionary * dict = [NSDictionary dictionaryWithObjectsAndKeys:arr,@"title",@"0",@"type", nil];
                        [_yuedanArr addObject: dict];
                        
                        _choose = [[NSMutableArray alloc]initWithObjects:@"", nil];
                        NSMutableDictionary *Dict = [NSMutableDictionary dictionary];
                        [Dict setValue:arr.qId forKey:@"qId"];
                        [Dict setValue:_choose forKey:@"options"];
                        [_array addObject:Dict];
                    }
                }
                if ([dict objectForKey:@"TKT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"TKT"];
                    for (QuestionListModel *arr in dataModel.tkt) {
                        NSDictionary * dict = [NSDictionary dictionaryWithObjectsAndKeys:arr,@"title",@"1",@"type", nil];
                        [_yuedanArr addObject: dict];
                        
                        _tianArray2 = [NSMutableArray array];
                        for (int i = 0; i < arr.options.count; i ++) {
                            [_tianArray2 addObject:@""];
                        }
                        
                        NSMutableDictionary *Dict = [NSMutableDictionary dictionary];
                        [Dict setValue:arr.qId forKey:@"qId"];
                        [Dict setValue:_tianArray2 forKey:@"options"];
                        [_array addObject:Dict];
                    }
                }
                
            }
            
            //听力
            for (int i = 0; i < _tingArr.count; i ++ ) {
                
                ReadingComModel *listmodel = _tingArr[i];
                NSDictionary *dict = listmodel.childQuestions;
                if ([dict objectForKey:@"DXT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"DXT"];
                    for (QuestionListModel *arr in dataModel.dxt) {
                        NSDictionary * dict = [NSDictionary dictionaryWithObjectsAndKeys:arr,@"title",@"0",@"type", nil];
                        [_tingdanArr addObject: dict];
                        _choose = [[NSMutableArray alloc]initWithObjects:@"", nil];
                        NSMutableDictionary *Dict = [NSMutableDictionary dictionary];
                        [Dict setValue:arr.qId forKey:@"qId"];
                        [Dict setValue:_choose forKey:@"options"];
                        [_array addObject:Dict];
                    }
                }
                if ([dict objectForKey:@"TKT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"TKT"];
                    for (QuestionListModel *arr in dataModel.tkt) {
                        NSDictionary * dict = [NSDictionary dictionaryWithObjectsAndKeys:arr,@"title",@"1",@"type", nil];
                        [_tingdanArr addObject: dict];
                        
                        _tianArray3 = [NSMutableArray array];
                        for (int i = 0; i < arr.options.count; i ++) {
                            [_tianArray3 addObject:@""];
                        }
                        
                        NSMutableDictionary *Dict = [NSMutableDictionary dictionary];
                        [Dict setValue:arr.qId forKey:@"qId"];
                        [Dict setValue:_tianArray3 forKey:@"options"];
                        [_array addObject:Dict];
                    }
                }
            }
            
            [self _prepareView];
            
        }
    } failed:^(id obj) {
        
    }];
    
    
}

- (void)_prepareUI
{
    _answerView = [[QuestionAnswer alloc]initWithFrame:CGRectMake(0, 0, MainScreenSize_W   , MainScreenSize_H)];
    _answerView.backgroundColor = [UIColor whiteColor];
    _answerView.delegate = self;
    _answerView.hidden = YES;
    [self.view addSubview:_answerView];

}

- (void)_prepareView
{
    CGRect rect = CGRectMake(0.0f,0.0f,MainScreenSize_W,MainScreenSize_H);
    _myScrollView = [[UIScrollView alloc]initWithFrame:rect];
    //题目的个数
    _myScrollView.contentSize= CGSizeMake(MainScreenSize_W*_questionAccount, 0);
    _myScrollView.pagingEnabled = YES;
    _myScrollView.delegate = self;
    _myScrollView.tag = 111;
    _myScrollView.showsHorizontalScrollIndicator = NO;
    _myScrollView.showsVerticalScrollIndicator = NO;
    _myScrollView.backgroundColor = [UIColor clearColor];
    [self.view addSubview:_myScrollView];
    
    UIView *bgView = [[UIView alloc]initWithFrame:CGRectMake(0, 64, MainScreenSize_W, 40)];
    bgView.backgroundColor = PView_BGColor;
    [self.view addSubview:bgView];
    
    _topicLabel = [[UILabel alloc]initWithFrame:CGRectMake(10, 10, 100, 30)];
    _topicLabel.textAlignment = NSTextAlignmentLeft;
    _topicLabel.font = [UIFont boldSystemFontOfSize:16];
    _topicLabel.text = @"单选题";
    [bgView addSubview:_topicLabel];
    
    _timeLabel = [[UILabel alloc]initWithFrame:CGRectMake(MainScreenSize_W - 100, 15, 80, 20)];
    _timeLabel.text = @"00时00分00秒";
    _timeLabel.textColor = [UIColor grayColor];
    _timeLabel.font = [UIFont boldSystemFontOfSize:12];
    _time = _timeNumber;
    [bgView addSubview:_timeLabel];
    
    _timeView = [[UIImageView alloc]initWithFrame:CGRectMake(_timeLabel.left - 20 , 18 , 15, 15)];
    _timeView.image = [UIImage imageNamed:@"clock"];
    [bgView addSubview:_timeView];
    
    _answerView = [[QuestionAnswer alloc]initWithFrame:CGRectMake(0, 64, MainScreenSize_W, MainScreenSize_H - 64)];
    _answerView.backgroundColor = [UIColor whiteColor];
    _answerView.delegate = self;
    _answerView.hidden = YES;
    [self.view addSubview:_answerView];

    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    for (int i = 0; i < _questionAccount; i ++) {
        //判断单选题，填空题，听力题,阅读理解
        if ((i+1)> (_danArr.count + _tianArr.count + _yuedanArr.count)) {
            //听力题
            TingliQuestionView *questionView = [[TingliQuestionView alloc]initWithFrame:CGRectMake(10 + i*MainScreenSize_W, 0 , MainScreenSize_W - 20,  - 114)];
            int temp = 0;
            questionView.tag = i+1;
            for (int o = 0; o < _tingArr.count; o ++ ) {
                ReadingComModel *listmodel = _tingArr[o];
                NSDictionary *dict = listmodel.childQuestions;
                if ([dict objectForKey:@"DXT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"DXT"];
                    if (dataModel.dxt.count) {
                        temp += dataModel.dxt.count;
                    }
                }
                if ([dict objectForKey:@"TKT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"TKT"];
                    if (dataModel.tkt.count) {
                        temp += dataModel.tkt.count;
                    }
                }
                if (temp>m) {
                    if ([_whichMV isEqualToString:@"讲解视频"]) {
                        questionView.whichMV = _whichMV;
                    }
                    [questionView addTingLiData:_tingArr[o] withPage:_tingdanArr[m] withIndex:o];
                    break;
                }
            }
            questionView.delegate = self;
            myPage ++ ;
            questionView.backgroundColor = PView_BGColor;
            [_myScrollView addSubview:questionView];
            m ++;
        }else if ((i+1)> (_danArr.count + _tianArr.count)){
            //阅读理解题
            YueduQuestionView *questionView = [[YueduQuestionView alloc]initWithFrame:CGRectMake(10 + i*MainScreenSize_W, 0 , MainScreenSize_W - 20, MainScreenSize_H - 114)];
            int temp = 0;
            for (int n = 0; n < _yueArr.count; n ++ ) {
                ReadingComModel *listmodel = _yueArr[n];
                NSDictionary *dict = listmodel.childQuestions;
                if ([dict objectForKey:@"DXT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"DXT"];
                    if (dataModel.dxt.count) {
                        temp += dataModel.dxt.count;
                    }
                }
                if ([dict objectForKey:@"TKT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"TKT"];
                    if (dataModel.tkt.count) {
                        temp += dataModel.tkt.count;
                    }
                }
                if (temp>k) {
                    if ([_whichMV isEqualToString:@"讲解视频"]) {
                        questionView.whichMV = _whichMV;
                    }
                    [questionView addYueDuData:_yueArr[n] withPage:_yuedanArr[k]];
                    break;
                }
            }
            questionView.delegate = self;
            questionView.tag = 0;
            myPage ++ ;
            questionView.backgroundColor = PView_BGColor;
            [_myScrollView addSubview:questionView];
            k ++;
        }else if ((i+1)> _danArr.count){
            //填空题
            TianQuestionView *questionView = [[TianQuestionView alloc]initWithFrame:CGRectMake(10 + i*MainScreenSize_W, 0 , MainScreenSize_W - 20, MainScreenSize_H - 114)];
            if ([_whichMV isEqualToString:@"讲解视频"]) {
                questionView.whichMV = _whichMV;
            }
            [questionView addTianKongData:_tianArr[j]];
            questionView.delegate = self;
            questionView.tag = 0;
            questionView.backgroundColor = PView_BGColor;
            myPage ++ ;
            [_myScrollView addSubview:questionView];
            j ++;
            
        }else {
            //单选题
            QuestionView *questionView = [[QuestionView alloc]initWithFrame:CGRectMake(10 + i*MainScreenSize_W, 0 , MainScreenSize_W - 20, MainScreenSize_H - 114)];
            questionView.only = NO;
            questionView.delegate = self;
            questionView.tag = 0;
            if ([_whichMV isEqualToString:@"讲解视频"]) {
                questionView.whichMV = _whichMV;
            }
            [questionView addDanxuanData:_danArr[i]];
            questionView.backgroundColor = PView_BGColor;
            myPage ++ ;
            [_myScrollView addSubview:questionView];
        }
        
    }
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    
    [self addTimer];
    self.view.backgroundColor = PView_BGColor;
    
}

-(void)addTimer
{
//    if (self.rightBtn.hidden == NO) {
        _timer=[NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(nextTime) userInfo:nil repeats:YES];
        [[NSRunLoop currentRunLoop]addTimer:self.timer forMode:NSRunLoopCommonModes];
//    }
    
}

-(void)removeTimer
{
//    if (self.rightBtn.hidden == NO) {
        [self.timer invalidate];
        self.timer=nil;
//    }
}

-(void)nextTime
{
    _timeNumber++;
    int hour = _timeNumber/3600.0;
    int min = (int)_timeNumber%3600/60;
    int temp = (int)_timeNumber%3600%60;
    _timeLabel.text = [NSString stringWithFormat:@"%02d时%02d分%02d秒",hour,min,temp];
    
}


#pragma mark --UIScrollViewDelegate--
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    
    if (scrollView.tag == 111) {
        [self.view endEditing:YES];
    }
    _page = (scrollView.contentOffset.x+MainScreenSize_W*0.5)/MainScreenSize_W;
    NSLog(@"%d",_page);
    
    _tianArray1 = [NSMutableArray array];
    _tianArray2 = [NSMutableArray array];
    _tianArray3 = [NSMutableArray array];
    
    if (_page < _danArr.count+_tianArr.count+_yuedanArr.count + _tingdanArr.count) {
        if (_page>=(_danArr.count+_tianArr.count+_yuedanArr.count)) {
            NSDictionary *page3 = _tingdanArr[_page-_danArr.count-_tianArr.count-_yuedanArr.count];
            QuestionListModel *data3 = [page3 valueForKey:@"title"];
            for (int i = 0; i < data3.options.count; i ++) {
                [_tianArray3 addObject:@""];
            }
        }else if (_page>=(_danArr.count+_tianArr.count)) {
            NSDictionary *page2 = _yuedanArr[_page-_danArr.count-_tianArr.count];
            QuestionListModel *data2 = [page2 valueForKey:@"title"];
            for (int i = 0; i < data2.options.count; i ++) {
                [_tianArray2 addObject:@""];
            }
        }else if (_page>=_danArr.count) {
            QuestionListModel *data1 = _tianArr[_page-_danArr.count];
            for (int i = 0; i < data1.options.count; i ++) {
                [_tianArray1 addObject:@""];
            }
        }
        
//        [self.middleBtn setTitle:[NSString stringWithFormat:@"%d/%d",_page+1,_questionAccount] forState:UIControlStateNormal];
        if ((_page+1)> (_danArr.count + _tianArr.count + _yuedanArr.count)) {
            _topicLabel.text = @"听力题";
            int oral =  (int)(_page - _danArr.count - _tianArr.count - _yueArr.count);
            int temp = 0;
            for (int n = 0; n < _tingArr.count; n ++ ) {
                ReadingComModel *listmodel = _tingArr[n];
                NSDictionary *dict = listmodel.childQuestions;
                if ([dict objectForKey:@"DXT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"DXT"];
                    if (dataModel.dxt.count) {
                        temp += dataModel.dxt.count;
                    }
                }
                if ([dict objectForKey:@"TKT"]) {
                    QuestionDataModel *dataModel = [dict objectForKey:@"TKT"];
                    if (dataModel.tkt.count) {
                        temp += dataModel.tkt.count;
                    }
                }
                if (temp>oral) {
                    
                    TingliQuestionView *questionView;
                    for (UIView *view in [scrollView subviews]) {
                        if (view.tag){
                            questionView = (TingliQuestionView *)view;
                            
                            if (bsound) {
                                if ([_soundUrl isEqualToString:listmodel.qTitleMediaUrl]) {
                                    
                                    [questionView.tingLiButton startAnimating];//开始播放动画
                                    
                                }else{
                                    if ([self.soundplayer isPlaying]) {
                                        [self.soundplayer stop];
                                        [questionView.tingLiButton stopAnimating];
                                        bsound = NO;
                                    }
                                }
                            }else{
                                [questionView.tingLiButton stopAnimating];
                            }
                        }
                    }
                    
                    
                    break;
                }
            }
            
        }else if ((_page+1)> (_danArr.count + _tianArr.count)){
            _topicLabel.text = @"阅读理解题";
            if ([self.soundplayer isPlaying]) {
                [self.soundplayer stop];
                bsound = NO;
            }
        }else if ((_page+1)> _danArr.count){
            _topicLabel.text = @"填空题";
            if ([self.soundplayer isPlaying]) {
                [self.soundplayer stop];
                bsound = NO;
            }
        }else {
            _topicLabel.text = @"单选题";
            if ([self.soundplayer isPlaying]) {
                [self.soundplayer stop];
                bsound = NO;
            }
        }
    }

}

- (void)submitAnswer
{
    NSString *TakeTime = [NSString stringWithFormat:@"%.0f",_timeNumber*1000.0];
    
    [_answerDict setValue:_array forKey:@"result"];
    SBJsonWriter *writer = [[SBJsonWriter alloc] init];
    NSString *jasonString = [writer stringWithObject:_answerDict];
    NSLog(@"%@",jasonString);
    
    NSString *requestUrl = nil;
    NSString *videoId = nil;
    NSString *unitId = nil;
    requestUrl = @"/SubmitAnswer";
    videoId = @"";
    unitId = @"";
    
    [self removeTimer];
    if (bsound) {
        [self.soundplayer stop];
        self.soundplayer=nil;
        bsound = NO;
    }
    
    LearningPlanRequest *request = [[LearningPlanRequest alloc] init];
    [request userSubmitAnswerByWeekWithWeekId:_weekId andTakeTime:TakeTime andAnswerResult:jasonString success:^(id obj) {
        
    } failed:^(id obj) {
        
    }];
}

- (void)middleBtnClick
{
    _isMiddleClick = !_isMiddleClick;
    if (_isMiddleClick) {
        _answerView.hidden = NO;
    }else{
        _answerView.hidden = YES;
    }
}


- (void)base_navigation_RightBarButtonPressed
{
    TrainResultFourViewController *trainVC = [[TrainResultFourViewController alloc]init];
    [self.navigationController pushViewController:trainVC animated:YES];
}

#pragma mark ---UIAlertViewDelegate----

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (alertView.tag == 101) {
        if (buttonIndex) {
            if ([_whichMV isEqualToString:@"拓展练习"]) {
                
                //暂时没有提交
                
            }else if ([_whichMV isEqualToString:@"再次训练"]){
                [self submitAnswer];
            }else{
                [self submitAnswer];
            }
        }
    }else if (alertView.tag == 102) {
        if (buttonIndex) {
            [self removeTimer];
            [self.navigationController popViewControllerAnimated:YES];
            if (bsound) {
                [self.soundplayer stop];
                self.soundplayer=nil;
                bsound = NO;
            }
        }
    }
}


#pragma mark ---TingliQuestionViewDelegate---

- (void)tingliQuestionViewDelegateWithButton:(UIView *)tap
{
    NSLog(@"播放听力");
    
    ReadingComModel *listmodel = _tingArr[tap.tag];
    _soundIndex = (int)tap.tag;
    
    UIImageView *tingliView = (UIImageView *)tap;
    
    
    RequestCenter *requestCenter = [[RequestCenter alloc] init];
    if ((NSNull *)listmodel.qTitleMediaUrl != [NSNull null]) {
        [requestCenter downloadWithURL:[NSURL URLWithString:listmodel.qTitleMediaUrl] progress:^(float percent, NSString *path) {
            NSLog(@"percent = %f",percent);
            NSLog(@"path = %@",path);
            if (!bsound) {
                [tingliView startAnimating];
            }
            if (percent == 1) {
                if ([_soundUrl isEqualToString:listmodel.qTitleMediaUrl]) {
                    if ( bsound ) {
                        [self.soundplayer stop];
                        [tingliView stopAnimating];
                        bsound = NO;
                    }else{
                        [tingliView startAnimating];//开始播放动画
                        
                        //播放
                        NSURL *fileUrl=[NSURL fileURLWithPath:path];
                        
                        [self initPlayer];
                        NSError *error;
                        self.soundplayer=[[AVAudioPlayer alloc]initWithContentsOfURL:fileUrl error:&error];
                        if (error)
                        {
                            [aCommon iToast:@"请重新获取听力文件"];
                            [tingliView stopAnimating];
                            return;
                        }
                        [self.soundplayer setVolume:1];
                        [self.soundplayer prepareToPlay];
                        [self.soundplayer setDelegate:self];
                        [self.soundplayer play];
                        bsound = YES;
                    }
                }else{
                    if ( bsound ) {
                        [self.soundplayer stop];
                        [tingliView stopAnimating];
                        bsound = NO;
                    }
                    [tingliView startAnimating];//开始播放动画
                    
                    //播放
                    NSURL *fileUrl=[NSURL fileURLWithPath:path];
                    
                    [self initPlayer];
                    NSError *error;
                    self.soundplayer=[[AVAudioPlayer alloc]initWithContentsOfURL:fileUrl error:&error];
                    
                    if (error)
                    {
                        [aCommon iToast:@"请重新获取听力文件"];
                        [tingliView stopAnimating];
                        return;
                    }
                    [self.soundplayer setVolume:1];
                    [self.soundplayer prepareToPlay];
                    [self.soundplayer setDelegate:self];
                    [self.soundplayer play];
                    bsound = YES;
                }
                _soundUrl = listmodel.qTitleMediaUrl;
            }
            
        }];
    }else{
        [aCommon iToast:@"音频文件为空"];
    }
    
    
}

-(void)initPlayer{
    //初始化播放器的时候如下设置
    UInt32 sessionCategory = kAudioSessionCategory_MediaPlayback;
    AudioSessionSetProperty(kAudioSessionProperty_AudioCategory,
                            sizeof(sessionCategory),
                            &sessionCategory);
    
    UInt32 audioRouteOverride = kAudioSessionOverrideAudioRoute_Speaker;
    AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute,
                             sizeof (audioRouteOverride),
                             &audioRouteOverride);
    
    AVAudioSession *audioSession = [AVAudioSession sharedInstance];
    
    //默认情况下扬声器播放
    [audioSession setCategory:AVAudioSessionCategoryPlayback error:nil];
    [audioSession setActive:YES error:nil];
    audioSession = nil;
}

-(void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)player successfully:(BOOL)flag
{
    //播放结束后自动结束播放动画
    if (bsound) {
        TingliQuestionView *questionView;
        for (UIView *view in [_myScrollView subviews]) {
            if (view.tag){
                questionView = (TingliQuestionView *)view;
                [questionView.tingLiButton stopAnimating];
            }
        }
        bsound = NO;
    }
    [self.soundplayer stop];
    self.soundplayer=nil;
}

#pragma mark ---TingliQuestionViewDelegate----

- (void)tingliQuestionViewDelegateWithBigImage:(UIView *)tapView
{
    NSLog(@"点击放大图片===听力");
    UIImageView *imageView = (UIImageView *)tapView;
    PicBrowseViewController *vc = [[PicBrowseViewController alloc] init];
    vc.image = imageView.image;
    [self.navigationController pushViewController:vc animated:NO];
}

//听力播放视频
- (void)tingliQuestionViewDelegateWithPlayVideo:(NSString *)btn
{
    NSLog(@"听力播放视频");
//    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
//    player.videoId = btn;
//    player.videoTitle = @"听力播放视频";
//    player.hidesBottomBarWhenPushed = YES;
//    [self.navigationController pushViewController:player animated:NO];
}

//听力单选
- (void)tingliQuestionViewDelegateWithDanAnswer:(NSString *)answer andTrueOrFalse:(NSString *)judge
{
    [_answerArr replaceObjectAtIndex:_page withObject:judge];
    
    //提交答案
    NSDictionary *page = _tingdanArr[_page-_danArr.count-_tianArr.count-_yuedanArr.count];
    QuestionListModel *data = [page valueForKey:@"title"];
    _choose = [NSMutableArray array];
    [_choose addObject:answer];
    
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    [dict setValue:data.qId forKey:@"qId"];
    [dict setValue:_choose forKey:@"options"];
    
    
    [_array replaceObjectAtIndex:_page withObject:dict];
}

//听力填空
- (void)tingliQuestionViewDelegateWithTianAnswer:(NSString *)answer andTrueOrFalse:(NSString *)judge andTag:(int)tag
{
    if (![[_answerArr objectAtIndex:_page] isEqualToString:@"2"]) {
        [_answerArr replaceObjectAtIndex:_page withObject:judge];
    }
    
    //提交答案
    NSDictionary *page = _tingdanArr[_page-_danArr.count-_tianArr.count-_yuedanArr.count];
    QuestionListModel *data = [page valueForKey:@"title"];
    //    [_tianArray3 replaceObjectAtIndex:tag withObject:answer];
    
    NSMutableDictionary *dict = [[NSMutableDictionary alloc]initWithDictionary:_array[_page]];
    _tianArray3 = [[NSMutableArray alloc]initWithArray:dict[@"options"]];
    [_tianArray3 replaceObjectAtIndex:tag withObject:answer];
    [dict setValue:data.qId forKey:@"qId"];
    [dict setValue:_tianArray3 forKey:@"options"];
    
    
    [_array replaceObjectAtIndex:_page withObject:dict];
}

#pragma mark  ---YueduQuestionViewDelegate----

- (void)yueduQuestionViewDelegateWithBigImage:(UIView *)tapView
{
    NSLog(@"点击方法图片==阅读");
    UIImageView *imageView = (UIImageView *)tapView;
    PicBrowseViewController *vc = [[PicBrowseViewController alloc] init];
    vc.image = imageView.image;
    [self.navigationController pushViewController:vc animated:NO];
}

//阅读播放视频
- (void)yueduQuestionViewDelegateWithPlayVideo:(NSString *)btn
{
    NSLog(@"阅读播放视频");
//    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
//    player.videoId = btn;
//    player.videoTitle = @"阅读播放视频";
//    player.hidesBottomBarWhenPushed = YES;
//    [self.navigationController pushViewController:player animated:NO];
}

//阅读单选
- (void)yueduQuestionViewDelegateWithDanAnswer:(NSString *)answer andTrueOrFalse:(NSString *)judge
{
    [_answerArr replaceObjectAtIndex:_page withObject:judge];
    
    //提交答案
    NSDictionary *page = _yuedanArr[_page-_danArr.count-_tianArr.count];
    QuestionListModel *data = [page valueForKey:@"title"];
    _choose = [NSMutableArray array];
    [_choose addObject:answer];
    
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    [dict setValue:data.qId forKey:@"qId"];
    [dict setValue:_choose forKey:@"options"];
    
    
    [_array replaceObjectAtIndex:_page withObject:dict];
}

//阅读填空
- (void)yueduQuestionViewDelegateWithTianAnswer:(NSString *)answer andTrueOrFalse:(NSString *)judge andTag:(int)tag
{
    if (![[_answerArr objectAtIndex:_page] isEqualToString:@"2"]) {
        [_answerArr replaceObjectAtIndex:_page withObject:judge];
    }
    
    //提交答案
    NSDictionary *page = _yuedanArr[_page-_danArr.count-_tianArr.count];
    QuestionListModel *data = [page valueForKey:@"title"];
    
    
    NSMutableDictionary *dict = [[NSMutableDictionary alloc]initWithDictionary:_array[_page]];
    _tianArray2 = [[NSMutableArray alloc]initWithArray:dict[@"options"]];
    [_tianArray2 replaceObjectAtIndex:tag withObject:answer];
    [dict setValue:data.qId forKey:@"qId"];
    [dict setValue:_tianArray2 forKey:@"options"];
    
    
    [_array replaceObjectAtIndex:_page withObject:dict];
}

#pragma mark ---QuestionViewDelegate---

- (void)questionViewDelegateWithBigImage:(UIView *)tapView
{
    NSLog(@"点击放大图片===单选");
    UIImageView *imageView = (UIImageView *)tapView;
    PicBrowseViewController *vc = [[PicBrowseViewController alloc] init];
    vc.image = imageView.image;
    [self.navigationController pushViewController:vc animated:NO];
}

//单选题答案
- (void)questionViewDelegateWithAnswer:(NSString *)answer andTrueOrFalse:(NSString *)judge
{
    [_answerArr replaceObjectAtIndex:_page withObject:judge];
    
    //提交答案
    QuestionListModel *data = _danArr[_page];
    _choose = [NSMutableArray array];
    [_choose addObject:answer];
    
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    [dict setValue:data.qId forKey:@"qId"];
    [dict setValue:_choose forKey:@"options"];
    
    
    [_array replaceObjectAtIndex:_page withObject:dict];
}

//播放视频
- (void)questionViewDelegateWithPlayVideo:(NSString *)btn
{
    NSLog(@"单选视频");
//    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
//    player.videoId = btn;
//    player.videoTitle = @"单选视频";
//    player.hidesBottomBarWhenPushed = YES;
//    [self.navigationController pushViewController:player animated:NO];
}

#pragma mark  ----TianQuestionViewDelegate----

- (void)tianQuestionViewDelegateWithBigImage:(UIView *)tapView
{
    NSLog(@"点击放大图片===填空");
    UIImageView *imageView = (UIImageView *)tapView;
    PicBrowseViewController *vc = [[PicBrowseViewController alloc] init];
    vc.image = imageView.image;
    [self.navigationController pushViewController:vc animated:NO];
}

//填空题答案
- (void)tianQuestionViewDelegateWithAnswer:(NSString *)answer andTrueOrFalse:(NSString *)judge andTag:(int)tag
{
    if (![[_answerArr objectAtIndex:_page] isEqualToString:@"2"]) {
        [_answerArr replaceObjectAtIndex:_page withObject:judge];
    }
    
    //提交答案
    
    QuestionListModel *data = _tianArr[_page-_danArr.count];
    
    NSMutableDictionary *dict = [[NSMutableDictionary alloc]initWithDictionary:_array[_page]];
    _tianArray1 = [[NSMutableArray alloc]initWithArray:dict[@"options"]];
    [_tianArray1 replaceObjectAtIndex:tag withObject:answer];
    [dict setValue:data.qId forKey:@"qId"];
    [dict setValue:_tianArray1 forKey:@"options"];
    
    
    [_array replaceObjectAtIndex:_page withObject:dict];
}

//播放视频
- (void)tianQuestionViewDelegateWithPlayVideo:(NSString *)btn
{
    NSLog(@"填空视频");
//    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
//    player.videoId = btn;
//    player.videoTitle = @"填空视频";
//    player.hidesBottomBarWhenPushed = YES;
//    [self.navigationController pushViewController:player animated:NO];
    
}

#pragma mark ----QuestionAnswerDelegate---

- (void)QuestionAnswerDelegateWithTag:(NSUInteger)tag
{
    _isMiddleClick = !_isMiddleClick;
    if (_isMiddleClick) {
        _answerView.hidden = NO;
    }else{
        _answerView.hidden = YES;
    }
    _page = (int)tag;
    [_myScrollView setContentOffset:CGPointMake(tag*MainScreenSize_W, 0) animated:NO];
    [self base_changeNavigationTitleWithString:[NSString stringWithFormat:@"%ld/%d",tag+1,_questionAccount] andImage:@"nav_title"];
    if ((_page+1)> (_danArr.count + _tianArr.count + _yuedanArr.count)) {
        _topicLabel.text = @"听力题";
    }else if ((_page+1)> (_danArr.count + _tianArr.count)){
        _topicLabel.text = @"阅读理解题";
    }else if ((_page+1)> _danArr.count){
        _topicLabel.text = @"填空题";
    }else {
        _topicLabel.text = @"单选题";
    }
    
}

#pragma mark ---键盘监听---

// Called when the UIKeyboardDidShowNotification is sent.
- (void)keyboardWasShown:(NSNotification*)aNotification
{
    [UIView animateWithDuration:0.5 animations:^{
        _myScrollView.frame = CGRectMake(0.0f,0.0f,MainScreenSize_W,MainScreenSize_H - 114.0f);
    }];
}

// Called when the UIKeyboardWillHideNotification is sent
- (void)keyboardWillBeHidden:(NSNotification*)aNotification
{
    [UIView animateWithDuration:0.5 animations:^{
        _myScrollView.frame = CGRectMake(0.0f,114.0f,MainScreenSize_W,MainScreenSize_H - 114.0f);
    }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
