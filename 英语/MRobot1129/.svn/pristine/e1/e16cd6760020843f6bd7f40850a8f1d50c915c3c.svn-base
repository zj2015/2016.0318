//
//  SkillTrainingViewController.m
//  MRobot
//
//  Created by BaiYu on 15/8/25.
//  Copyright (c) 2015年 silysolong. All rights reserved.
//

#import "SkillTrainingViewController.h"
#import "SkillTrainingTableViewCell.h"
#import "SkillContentViewController.h"
#import "ExerciseTrainViewController.h"
#import "DWCustomPlayerViewController.h"
#import "SkillDataModel.h"
#import "SkillListModel.h"

@interface SkillTrainingViewController ()

@end

@implementation SkillTrainingViewController

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.tabBarController.tabBar.hidden = YES;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.

    [self base_changeNavigationTitleWithString:@"技巧训练" andSmallTitle:@"本周技巧训练内容"];
}

-(void)_prepareUI
{
    skillTrainTable = [[UIFolderTableView alloc] initWithFrame:CGRectMake(0, 0, MainScreenSize_W, MainScreenSize_H) style:UITableViewStylePlain];
    skillTrainTable.separatorStyle = UITableViewCellSeparatorStyleNone;
    skillTrainTable.delegate = self;
    skillTrainTable.dataSource = self;
    skillTrainTable.folderDelegate = self;
    skillTrainTable.rowHeight = 40 * SIZE_TIMES;
    [self.view addSubview:skillTrainTable];
}

-(void)_prepareData
{
    if (self.fromVC == 0) {
        //    1.4.10 技巧训练-综合训练
        [self showAlertHUD:@"正在加载..."];
        LearningPlanRequest *skillListRequest = [[LearningPlanRequest alloc] init];
        [skillListRequest userSkillListWithWeekId:self.weekId success:^(id obj) {
            InfoResult *infoResult = (InfoResult *)obj;
            if ([infoResult.code isEqualToString:@"0"]) {
                SkillDataModel *skillDataModel = [[SkillDataModel alloc]init];
                skillDataModel = (SkillDataModel *)[infoResult extraObj];
                skillArr = skillDataModel.skillListArr;
                
                [skillTrainTable reloadData];
            }else{
                [aCommon iToast:@"加载失败!"];
            }
        } failed:^(id obj) {
            [aCommon iToast:@"系统未知错误!"];
        }];
    }else{
        //    1.4.5 技巧训练-综合训练（通用解题技巧）
        [self showAlertHUD:@"正在加载..."];
        LearningPlanRequest *skillListRequest = [[LearningPlanRequest alloc] init];
        [skillListRequest userSkillInfoWithSId:self.sId success:^(id obj) {
            InfoResult *infoResult = (InfoResult *)obj;
            if ([infoResult.code isEqualToString:@"0"]) {
                
                skillInfoModel = (SkillInfoModel *)[infoResult extraObj];
                
                [skillTrainTable reloadData];
            }else{
                [aCommon iToast:@"加载失败!"];
            }
        } failed:^(id obj) {
            [aCommon iToast:@"系统未知错误!"];
        }];
    }
}

#pragma mark- UITableViewDataSourcer
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (self.fromVC == 0) {
        return [skillArr count];
    }else{
        return 1;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"SkillTrainingTableViewCell";
    
    if ([tableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [tableView setSeparatorInset:UIEdgeInsetsZero];
    }
    
    SkillTrainingTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil) {
        cell = [[SkillTrainingTableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:identifier];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    if (self.fromVC == 0) {
        if (skillArr) {
            SkillListModel *skillDataModel = [skillArr objectAtIndex:indexPath.row];
            
            cell.skillNameLab.text = [NSString stringWithFormat:@"%ld. %@",(long)indexPath.row + 1,skillDataModel.sName];
        }
    }else{
        cell.skillNameLab.text = [NSString stringWithFormat:@"%ld. %@",(long)indexPath.row + 1,skillInfoModel.sName];
    }
    cell.signImgView.image = [UIImage imageNamed:@"grayHide"];
    return cell;
}

#pragma mark- UITableViewDelegate
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    SkillTrainingTableViewCell *cell = (SkillTrainingTableViewCell *)[tableView cellForRowAtIndexPath:indexPath];
    selectRow = indexPath.row;
    
    isOtherClick = NO;//每展开一区时 其他模块的训练技巧按钮为未点击状态
    
    if (isClick == NO) {
        cell.signImgView.image = [UIImage imageNamed:@"greenShow"];
        isClick = YES;
    }
    
    SkillContentViewController *skillContentVC = [[SkillContentViewController alloc] init];
    skillContentVC.skillTrainVC = self;
    skillContentVC.clickRow = selectRow;
    
    tableView.scrollEnabled = NO;
    UIFolderTableView *folderTableView = (UIFolderTableView *)tableView;
    [folderTableView openFolderAtIndexPath:indexPath WithContentView:skillContentVC.view
                                 openBlock:^(UIView *subClassView, CFTimeInterval duration, CAMediaTimingFunction *timingFunction){
                                     // opening actions
                                 }
                                closeBlock:^(UIView *subClassView, CFTimeInterval duration, CAMediaTimingFunction *timingFunction){
                                    // closing actions
                                }
                           completionBlock:^{
                               // completed actions
                               tableView.scrollEnabled = YES;
                               
                               cell.signImgView.image = [UIImage imageNamed:@"grayHide"];
                               isClick = NO;
                               
                           }];
}

-(CGFloat)tableView:(UIFolderTableView *)tableView xForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 40;
}

#pragma mark - 技巧视频按钮被点击
-(void)skillVideoClick:(UIButton *)btn
{
    NSLog(@"%ld技巧视频按钮被点击",btn.tag);
    
    DWCustomPlayerViewController *player = [[DWCustomPlayerViewController alloc] init];
    if (self.fromVC == 0) {
        SkillListModel *skillListModel = [skillArr objectAtIndex:btn.tag];
        player.videoId = skillListModel.mainVideoCoverUrl;
        player.videoTitle = skillListModel.mainVideoCCId;
    }else{
        player.videoId = skillInfoModel.mainVideoCoverUrl;
        player.videoTitle = skillInfoModel.mainVideoCCId;
    }
    player.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:player animated:NO];
    
}

#pragma mark - 训练技巧按钮被点击
-(void)skillTrainClick:(UIButton *)btn
{
    NSLog(@"%ld训练技巧按钮被点击",(long)btn.tag);
    [self showAlert:btn.tag];
}

#pragma mark - (其他)训练技巧按钮被点击
-(void)otherSkillTrainingClick:(UIButton *)btn
{
    NSLog(@"%ld（其他）训练技巧按钮被点击",(long)btn.tag);
    isOtherClick = YES;
    [self showAlert:btn.tag];
}

#pragma mark - 自定义Alert
-(void)showAlert:(NSInteger)btnTag
{
    alertBgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, MainScreenSize_W, MainScreenSize_H)];
    alertBgView.backgroundColor = [UIColor grayColor];
    alertBgView.alpha = 0.5;
    [self.view addSubview:alertBgView];
    
    customAlertView = [[CustomAlertView alloc] initWithFrame:CGRectMake((MainScreenSize_W-260)/2, MainScreenSize_H/2-100, 260, 150)];
    customAlertView.backgroundColor = [UIColor whiteColor];
    customAlertView.clipsToBounds = YES;
    customAlertView.layer.cornerRadius = 5;
    [self.view addSubview:customAlertView];
    
    customAlertView.continueBtn.tag = btnTag + 1;
    [customAlertView.continueBtn addTarget:self action:@selector(chooseContinuePlay:) forControlEvents:UIControlEventTouchUpInside];
    [customAlertView.cancleBtn addTarget:self action:@selector(chooseContinuePlay:) forControlEvents:UIControlEventTouchUpInside];
}

#pragma mark - 是否继续观看视频
-(void)chooseContinuePlay:(UIButton *)btn
{
    if (btn.tag == 0) {//点击了取消按钮
        
        [alertBgView removeFromSuperview];
        [customAlertView removeFromSuperview];
        
    }else{
        NSLog(@"%ld继续进行技巧训练",btn.tag);
        [alertBgView removeFromSuperview];
        [customAlertView removeFromSuperview];
        
        SkillListModel *skillListModel = [skillArr objectAtIndex:btn.tag - 1];
        
        ExerciseTrainViewController *exerciseVC = [[ExerciseTrainViewController alloc]init];
        exerciseVC.sId = skillListModel.sId;
        exerciseVC.setType = 1;
        if (isOtherClick == YES) {
            exerciseVC.sType = @"1";
        }else{
            exerciseVC.sType = @"0";
        }
        [self.navigationController pushViewController:exerciseVC animated:YES];
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
